server:
  port: 8080

spring:
  security:
    oauth2:
      authorization:
        server:
          token:
            jwt:
              time-to-live: 30m
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          provider:
            google:
              user-name-attribute: email
              authorization-uri: ${AUTHORIZATION_URI}
  datasource:
    platform: postgres
    url: ${DATASOURCE_URL}
    username: ${DB_USERNAME}
    password: ${DB_PWD}
    driver-class-name: org.postgresql.Driver

  jpa:
    open-in-view: false
    database: POSTGRESQL
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        id.new_generator_mappings: true

config:
  uris:
    issuer-uri: ${ISSUER_URI}
    logout-uri: ${LOGOUT_URI}

